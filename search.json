[{"path":"https://maple-health-group.github.io/easysurv/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 easysurv authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://maple-health-group.github.io/easysurv/SECURITY.html","id":"supported-versions","dir":"","previous_headings":"","what":"Supported Versions","title":"Security Policy","text":"project new evolving, currently latest version supported security updates. Please ensure using recent release.","code":""},{"path":"https://maple-health-group.github.io/easysurv/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"Use section tell people report vulnerability. take security software seriously. believe found security vulnerability project, encourage report us soon possible.","code":""},{"path":"https://maple-health-group.github.io/easysurv/SECURITY.html","id":"how-to-report-a-security-vulnerability","dir":"","previous_headings":"Reporting a Vulnerability","what":"How to Report a Security Vulnerability","title":"Security Policy","text":"Please follow steps reporting: Email us github-security@maplehealthgroup.com detailed description vulnerability. Include steps reproduce issue, proof--concept possible. Avoid disclosing vulnerability publicly chance address .","code":""},{"path":"https://maple-health-group.github.io/easysurv/SECURITY.html","id":"response-expectations","dir":"","previous_headings":"Reporting a Vulnerability","what":"Response Expectations","title":"Security Policy","text":"Acknowledgement report within 48 hours. initial assessment within week. keep informed progress toward resolving issue. Public acknowledgment thanks issue resolved. Thank support.","code":""},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quick Start Guide for Survival Curve Extrapolation","text":"Welcome easysurv, R package developed Maple Health Group support basic survival analysis. package helps plot Kaplan-Meier data, assess proportional hazards assumptions, estimate & inspect standard parametric survival extrapolations. easysurv can also assist mixture cure spline modelling, although explained detail . guide covers quick family functions (quick_start, quick_KM, quick_PH, quick_fit, quick_to_XL) easy survival analysis just steps. finer control, explore package functions Survival Curve Extrapolation easysurv vignette.","code":""},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Quick Start Guide for Survival Curve Extrapolation","text":"Clean R environment ensure ’s interference pre-existing R objects functions. Attach easysurv can use functions. Load template using quick_start() function. quick_start() creates new .R script R environment, pre-loaded code survival analysis using lung dataset survival package. can also explore quick_start2() quick_start3(), use different datasets: “bc” flexsurv package simulated phase III breast cancer trial data ggsurvfit package, respectively. three templates share similarities analyses, choice starting data sets introduces variations, making beneficial review three templates comprehensive understanding package’s versatility.","code":"# Start from a clean environment rm(list=ls())  # Attach the easysurv package library(easysurv)  # Load a easysurv analysis template quick_start()"},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"preparing-your-data","dir":"Articles","previous_headings":"","what":"Preparing Your Data","title":"Quick Start Guide for Survival Curve Extrapolation","text":"need import, assess, clean data analysis. , advise practices ensure easysurv can handle data.","code":""},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"data-import","dir":"Articles","previous_headings":"Preparing Your Data","what":"Data Import","title":"Quick Start Guide for Survival Curve Extrapolation","text":"easysurv comes pre-loaded data sets borrowed packages. One lung data set survival package, accessible calling easy_lung. ’ll store surv_data inspect first rows data. importing data, number functions can used depending file format data. lines code available script can activated needed.","code":"# Data Import ------------------------------------------------------------------ surv_data <- easy_lung  # Inspect the first few rows to check it looks as expected. head(surv_data, 6) ##   inst      time status age sex ph.ecog ph.karno pat.karno meal.cal wt.loss ## 1    3 10.053388      2  74   1       1       90       100     1175      NA ## 2    3 14.948665      2  68   1       0       90        90     1225      15 ## 3    3 33.182752      1  56   1       0       90        90       NA      15 ## 4    5  6.899384      2  57   1       1       90        60     1150      11 ## 5    1 29.010267      2  60   1       0      100        90       NA       0 ## 6   12 33.577002      1  74   1       1       50        80      513       0 # Toggle the next comment to see entire data. # View(surv_data) # Here are some packages & their functions you might use to import your data: # - haven::read_sas() for SAS (.sas7bdat) files # - haven::read_dta() for Stata (.dta) files # - haven::read_sav() for SPSS (.sav) files # - readxl::read_excel() for Excel (.xls & .xlsx) files # - readr::read_csv() for .csv files"},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"data-manipulation","dir":"Articles","previous_headings":"Preparing Your Data","what":"Data Manipulation","title":"Quick Start Guide for Survival Curve Extrapolation","text":"’ll attach one package, dplyr, data manipulation, adjust number formatting using scipen. data needs formatted certain way survival analysis proceed smoothly. Don’t worry, requirements straightforward! data need: time variable specifying times events. binary event column specifying whether event right-censored (event = 0) event (event = 1). Optional: strata column specifying way stratify events comparison interest. Let’s apply requirements lung dataset imported stored surv_data. took following steps: Left time . Generated event variable transforming existing status variable. status coded “1” censoring “2” events, package (line standard survival packages) uses “0” right-censoring “1” events. fix , simply subtracted 1 status. Generated strata variable using sex, later converting factor. Converted dataset “tibble” easier manipulation, optionally, removed unnecessary columns using select() dplyr.","code":"# Attach other packages for data manipulation library(dplyr)  # Suppress scientific notation options(scipen = 999) surv_data <- surv_data |>   dplyr::mutate(     time = time,     event = status - 1,     strata = sex   ) |>   dplyr::mutate_at(\"strata\", as.factor) |>   dplyr::as_tibble() |>   dplyr::select(time, event, strata) # Optional: Just keep variables of interest"},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"data-labelling-and-inspection","dir":"Articles","previous_headings":"Preparing Your Data","what":"Data Labelling and Inspection","title":"Quick Start Guide for Survival Curve Extrapolation","text":"Let’s take look strata column, understand sample size group. see 138 instances “1” value 90 instances “2” value. Since ’re stratifying sex, isn’t helpful. Let’s rename levels correctly “Male” “Female”. can update labeling . data ready survival analysis now, want make sure everything set correctly. can take look top rows “tibble”. ’ll final sense check sample sizes number censors/events. summary informative . shows males females data, greater proportion females right censored. something mindful proceed analysis.","code":"# See the levels of the strata surv_data |> count(strata) ## # A tibble: 2 × 2 ##   strata     n ##   <fct>  <int> ## 1 1        138 ## 2 2         90 # Assign strata labels in a consistent order with the levels command levels(surv_data$strata) <- strata_labels <- c(\"Male\", \"Female\")  # Overwrite any labels impacted by re-coding attr(surv_data$event, \"label\") <- \"0 = Censored, 1 = Event\"  # Define an endpoint label which can be used in plots (if desired) endpoint_label <- \"Overall Survival\" # Make sure the data appears as expected. # A tibble prints the first 10 rows by default surv_data ## # A tibble: 228 × 3 ##     time event strata ##    <dbl> <dbl> <fct>  ##  1 10.1      1 Male   ##  2 14.9      1 Male   ##  3 33.2      0 Male   ##  4  6.90     1 Male   ##  5 29.0      1 Male   ##  6 33.6      0 Male   ##  7 10.2      1 Female ##  8 11.9      1 Female ##  9  7.16     1 Male   ## 10  5.45     1 Male   ## # ℹ 218 more rows # See sample sizes and censor/event counts surv_data |> count(strata) ## # A tibble: 2 × 2 ##   strata     n ##   <fct>  <int> ## 1 Male     138 ## 2 Female    90 surv_data |> count(strata, event) ## # A tibble: 4 × 3 ##   strata event     n ##   <fct>  <dbl> <int> ## 1 Male       0    26 ## 2 Male       1   112 ## 3 Female     0    37 ## 4 Female     1    53"},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"quick-workflow-using-easysurv","dir":"Articles","previous_headings":"","what":"Quick Workflow Using easysurv","title":"Quick Start Guide for Survival Curve Extrapolation","text":"Now data set properly set , can begin easysurv analysis! quick workflow, heavy lifting done set functions quick_ prefix. first quick_KM function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"kaplan-meier-analysis","dir":"Articles","previous_headings":"Quick Workflow Using easysurv","what":"Kaplan Meier analysis","title":"Quick Start Guide for Survival Curve Extrapolation","text":"quick_KM function produces object 5 components, containing Kaplan-Meier data might need: KM_all: survfit model includes whole data set (comparing across strata) using Surv(time, event) ~ .factor(strata) formula. KM_indiv: set survfit models individual strata data set using Surv(time, event) ~ 1 formula. KM_stepped: table summarizing KM survival time, presented “stepped” manner useful plotting Excel. KM_plot: plot Kaplan Meier curve using easysurv theme. KM_summary: Summary information strata, includes sample sizes, number events, restricted mean survival, median survial corresponding confidence intervals. ’ll run function surv_data tibble, providing names used time, event strata variables, along optional arguments can learn detail typing ?quick_KM console.  quick_KM function works combining uses survival::survfit(), easysurv::plot_KM, easysurv::summarise_KM easysurv::step_KM functions. stored output KM_check. Calling KM_check gives us quick summary , since ’s list object, want look individual component, need call name double square brackets. example,","code":"KM_check <- easysurv::quick_KM(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\",    # Some of the optional arguments for easysurv...   strata_labels = strata_labels,   add_time_0 = TRUE,    # Some of the optional arguments for ggsurvplot...   title = \"Kaplan-Meier Plot\",   subtitle = endpoint_label,   ylab = endpoint_label,   xlab = \"Months\",   xscale = 1,       # display in months (original)   break.x.by =  3   # 3 month breaks )  KM_check ## The quick_KM function has produced the following outputs:  ##  - KM_all ##  - KM_indiv ##  - KM_stepped ##  - KM_plot ##  - KM_summary ##   ##  Assign the output to an object to view it in detail. ##   ##  Below is the KM_summary. The KM_plot has been automatically printed.  ## ##         group records events    rmean se(rmean)    median   0.95LCL  0.95UCL ## Male     Male     138    112 10.71324 0.7527413  8.870637  6.965092 10.18480 ## Female Female      90     53 15.13420 1.1397075 13.995893 11.433265 18.06982 ##        Median follow-up ## Male           27.59754 ## Female         17.37988 KM_check[[\"KM_plot\"]]"},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"diagnostic-tests","dir":"Articles","previous_headings":"Quick Workflow Using easysurv","what":"Diagnostic tests","title":"Quick Start Guide for Survival Curve Extrapolation","text":"Next, want run diagnostics tests, informative future curve fitting. , ’ll use another consolidated function, quick_PH(). output another list object five components: cloglog_plot: log cumulative hazard plot easysurv theme. coxph_model: summary.coxPH object containing statistical test outputs, namely Cox PH hazard ratio confidence intervals. survdiff: survdiff object summarizes log-rank test, tests differences survival strata. p-values > 0.05, differences statistically significant. coxzph_ph_test: summary.coxPH object containing statistical test outputs, namely around whether data violates proportional hazards assumption . schoenfeld_plot: Schoenfeld residuals plot easysurv theme. ’ll run function using surv_data, supplying mostly self-explanatory arguments. can type ?quick_PH console visit vignette information.  function combines use easysurv::plot_KM plotting log cumulative hazard, survival::coxph survival::cox.zph fitting Cox model, survival::survdiff testing differences survival, easysurv::ggcoxdiagnostics producing Schoenfeld plot. KM_check, PH_check list object, individual components can called using double square brackets. However, output object supplies plots tests quick succession, can scroll/click needed.","code":"PH_check <- easysurv::quick_PH(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\",   strata_labels = strata_labels, # Optional   subtitle = endpoint_label # Optional )  PH_check ## The quick_PH function has produced the following outputs:  ##  - cloglog_plot ##  - coxph_model ##  - survdiff ##  - cox.zph_PH_test ##  - schoenfeld_plot ##   ##  Assign the output to an object to view it in detail.  ##   ##  ## ---- survival::coxph output -----------------------  ## ---- note: exp(coef) provides Hazard Ratio(s). ----  ##   ## Call: ## survival::coxph(formula = fit_joint, data = data) ##  ##   n= 228, number of events= 165  ##  ##                 coef exp(coef) se(coef)      z Pr(>|z|)    ## strataFemale -0.5310    0.5880   0.1672 -3.176  0.00149 ** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ##              exp(coef) exp(-coef) lower .95 upper .95 ## strataFemale     0.588      1.701    0.4237     0.816 ##  ## Concordance= 0.579  (se = 0.021 ) ## Likelihood ratio test= 10.63  on 1 df,   p=0.001 ## Wald test            = 10.09  on 1 df,   p=0.001 ## Score (logrank) test = 10.33  on 1 df,   p=0.001 ##  ##  ##   ##   ##   ## ---- survival::survdiff output --------------------  ## ---- note: survdiff tests for differences in ------  ## ---------- survival between strata, using a  ------  ## ---------- log-rank test.  ------------------------  ## ---------------------------------------------------  ## ---------- If p-values > 0.05, differences are ----  ## ---------- not statistically significant. ---------  ##   ## Call: ## survival::survdiff(formula = fit_joint, data = data) ##  ##                 N Observed Expected (O-E)^2/E (O-E)^2/V ## strata=Male   138      112     91.6      4.55      10.3 ## strata=Female  90       53     73.4      5.68      10.3 ##  ##  Chisq= 10.3  on 1 degrees of freedom, p= 0.001  ##  ##   ##   ##   ## ---- survival::cox.zph output ---------------------  ## ---- note: tests proportional hazards assumption --  ## ---------------------------------------------------  ## -----------If p-values > 0.05, do not reject ------  ## -----------PH assumption --------------------------  ##   ##        chisq df     p ## strata  2.86  1 0.091 ## GLOBAL  2.86  1 0.091 ##  ##   ##   ## The log cumulative hazard and Schoenfeld residuals plots have been automatically printed."},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"fitting-survival-models","dir":"Articles","previous_headings":"Quick Workflow Using easysurv","what":"Fitting Survival Models","title":"Quick Start Guide for Survival Curve Extrapolation","text":"Now better statistical awareness data, can fit curves data. top, need decide kind analysis want . easysurv 4 different options, can choose one, : Separate parametric model fitting Joint parametric model fitting Mixture cure model fitting Spline model fitting decided, can set preferences. instance, choose just standard separate parametric fits. also need select distributions interest. can choose many want, long ’s available dist option flexsurvreg, underlying function custom fitting function. , ’re going fit curves “Exponential”, “Gamma”, “Generalized Gamma”, “Gompertz”, “log-logistic”, “log-normal” “Weibull” distributions. gamma exception, distributions recommended NICE Technical Support Document (TSD) 14, “Survival analysis: Extrapolating patient data”. Gamma included required HTA bodies, including CADTH. notation distributions defined per flexsurvreg. can specify times want generate plot extrapolations , ’ll use seq() function start time = 0 go 5 times maximum supplied survival value data set. ’ll also specify two times, want 200 equally spaced time points. now ready use quick_fit functions, consolidate entire fitting process one step. one function type analysis: quick_fit(), quick_fit_joint(), quick_fit_cure() quick_fit_splines(). case, use quick_fit() since want complete standard separate parametric fitting. Nevertheless, process similar quick_fit functions can get information one typing name function, prefixed “?”, console. script set conditions set don’t need specifically find quick_fit functions want use avoid ones don’t. can simply click whole “## Model Fitting —-” section. click section, ’ll execute quick_fit() function. note, supplied times want generate/plot extrapolations times argument. view output object, can continue click next section, “## See Outputs —-”, also set conditionally, don’t need specifically find outputs created avoid ones didn’t. quick objects, fit_check list object 9 components can called individually using double square brackets: converged: list successfully converged distributions strata. fits: survHE::fit.models output, containing flexsurv objects converged distribution strata. hazard_plots: Smoothed hazard plots strata. hazard_plotly: add_interactive_plots argument set TRUE. set interactive plotly hazard plots, can accessed Viewer panel RStudio, strata. fit_plots: Plots curve extrapolations supplied times strata. fit_plotly: add_interactive_plots argument set TRUE. set interactive plotly survival plots, can accessed Viewer panel RStudio, strata. **goodness_of_fit: AIC BIC outputs, along relative ranks distribution. surv_params: flexsurv parameters distribution strata, along variance-covariance matrices. predicted_fits: Predicted survival proportions supplied times strata. example, can see plot survival data alongside curve extrapolations calling newly created fit_check specifying component interest using double square brackets.","code":"## Choose Model Fit Approaches ---------------------------------------------  # After assessing the Kaplan Meier and Proportional Hazards outputs, # choose a set of analyses to perform.  do_standard <- TRUE # TRUE: run standard parametric model fits (separate) do_joint <- FALSE # TRUE: run standard parametric model fits (joint) do_cure <- FALSE # TRUE: run mixture cure model fits do_splines <- FALSE # TRUE: run spline model fits dists_global <- c(   \"exp\",   \"gamma\",   \"gengamma\",   \"gompertz\",   \"llogis\",   \"lnorm\",   \"weibull\" ) # Times over which to generate/plot extrapolations times <- seq(   from = 0,   to = ceiling(max(surv_data$time) * 5),   length.out = 200 ) ### Separate fits --------------------------------------------------------------  if (do_standard) {   dists <- dists_global    # Toggle line below to see the function help   # ?quick_fit    # Fit models   fit_check <- easysurv::quick_fit(     data = surv_data,     time = \"time\",     event = \"event\",     strata = \"strata\",     dists = dists,     # Optional easysurv arguments     times = times,     strata_labels = strata_labels,     xlab = \"Months\",     add_interactive_plots = TRUE   ) } ## gompertz mean survival time not calculable. ## gengamma mean survival time not calculable. fit_check[[\"fit_plots\"]][[\"Male\"]]"},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"exporting-results-to-excel","dir":"Articles","previous_headings":"Quick Workflow Using easysurv","what":"Exporting results to Excel","title":"Quick Start Guide for Survival Curve Extrapolation","text":"objects created set quick functions, formatted way export easily Excel. want export results, can leverage openxlsx package. ’ll start creating new blank workbook. can now use quick_to_XL function take objects created quick functions put blank workbook. , set conditionally depending analyses performed, can simply click section. Lastly, ’ll give document name, set “easysurv output -” along date time, ’ll save document ’ll open !","code":"## Excel Exports ----------------------------------------------------------------  # Create a new workbook object wb <- openxlsx::createWorkbook() # The \"quick_to_XL\" function prepares easysurv outputs for Excel exporting. # Note that plots will be reproduced at a different DPI setting for Excel. # This may make them appear strange in R temporarily.  quick_to_XL(wb = wb, quick_object = KM_check) quick_to_XL(wb = wb, quick_object = PH_check)  if (do_standard) easysurv::quick_to_XL(wb = wb, quick_object = fit_check) if (do_joint) easysurv::quick_to_XL(wb = wb, quick_object = fit_check_joint) if (do_cure) easysurv::quick_to_XL(wb = wb, quick_object = fit_check_cure) if (do_splines) easysurv::quick_to_XL(wb = wb, quick_object = fit_check_splines) # Give the workbook a name ending in .xlsx output_name <- paste0(   \"easysurv output - \",   format(Sys.time(), \"%Y-%m-%d %H.%M\"),   \".xlsx\" )  # Save the workbook - you can choose a directory before this if desired. openxlsx::saveWorkbook(wb, file = output_name, overwrite = TRUE)  # Open the workbook and assess contents. openxlsx::openXL(output_name)"},{"path":"https://maple-health-group.github.io/easysurv/articles/workflow_quick.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Quick Start Guide for Survival Curve Extrapolation","text":", set standard parametric model outputs R Excel! Look future functionality vignettes sure check templates produced quick_start2() quick_start3(). encounter bugs issues, please reach authors.","code":""},{"path":"https://maple-health-group.github.io/easysurv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Niall Davison. Author, maintainer. Brad Kievit. Author.","code":""},{"path":"https://maple-health-group.github.io/easysurv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davison N, Kievit B (2023). easysurv: Estimate Inspect Parametric Survival Models. R package version 1.0.0,  https://maple-health-group.github.io/easysurv/, https://github.com/Maple-Health-Group/easysurv.","code":"@Manual{,   title = {easysurv: Estimate and Inspect Parametric Survival Models},   author = {Niall Davison and Brad Kievit},   year = {2023},   note = {R package version 1.0.0,  https://maple-health-group.github.io/easysurv/},   url = {https://github.com/Maple-Health-Group/easysurv}, }"},{"path":[]},{"path":"https://maple-health-group.github.io/easysurv/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Estimate and Inspect Parametric Survival Models","text":"easysurv R package provides tools estimate inspect parametric survival models. package built upon flexsurv engine, aims provide helpful starting point explore survival extrapolations across frequently used distributions (exponential, generalized gamma, gamma, Gompertz, log-logistic, log-normal Weibull).","code":""},{"path":"https://maple-health-group.github.io/easysurv/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate and Inspect Parametric Survival Models","text":"haven’t already, install R consider using RStudio integrated development environment (IDE).","code":"# You will need to have the pak package installed. install.packages(\"pak\")  # Then, you can install easysurv with the following line of code. pak::pkg_install(\"Maple-Health-Group/easysurv\")"},{"path":"https://maple-health-group.github.io/easysurv/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Estimate and Inspect Parametric Survival Models","text":"","code":"# Load the easysurv library library(easysurv)  # Open an example script quick_start() ## Note: The default file name is \"easysurv_start.R\", but you can define your own, e.g. ## quick_start(\"my_file_name.R\")  # Access help files help(package = \"easysurv\")  # Access a detailed vignette browseVignettes(\"easysurv\")"},{"path":"https://maple-health-group.github.io/easysurv/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Estimate and Inspect Parametric Survival Models","text":"package contains family functions prefixed “quick_” enable comprehensive set analyses just simple steps. example, quick_KM() function can generate themed KM plots, accompanied pertinent statistics numbers risk time.  user-defined set distributions, quick_fit() function can check distribution convergence, generate plots extrapolations smoothed hazards, create survival parameter tables, show goodness--fit statistics, calculate average survival times.","code":"# Format the pre-loaded \"lung\" dataset so that the \"status\" (1/2) variable can serve as an event indicator (0/1) surv_data <- easy_lung |>   dplyr::mutate(event = status - 1)  # Run \"quick_KM()\" on this formatted dataset KM_quick <- easysurv::quick_KM(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"sex\",   strata_labels = c(\"Male\", \"Female\"))  # Print the newly created KM plot KM_quick[[\"KM_plot\"]] # Run \"quick_fit()\" on the formatted \"lung\" dataset, examining the effect of the \"sex\" variable fit_quick <- easysurv::quick_fit(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"sex\",   dists = c(\"exp\", \"gamma\", \"gengamma\", \"gompertz\", \"llogis\", \"lnorm\", \"weibull\"),   strata_labels = c(\"Male\", \"Female\"),   add_interactive_plots = TRUE)  # Print the hazard and fitted survival plots fit_quick[[\"hazard_plots\"]][[\"Male\"]] fit_quick[[\"fit_plots\"]][[\"Male\"]] # Print the AIC/BIC scores and their relative ranking fit_quick[[\"goodness_of_fit\"]][[\"Male\"]] #>           model      AIC      BIC AIC_rank BIC_rank #> 1   Exponential 772.4134 775.3406        5        3 #> 2         Gamma 767.6859 773.5404        2        2 #> 3    Gen. Gamma 769.2226 778.0044        3        5 #> 4      Gompertz 769.7047 775.5592        4        4 #> 5  log-Logistic 776.5899 782.4444        6        6 #> 6    log-Normal 784.6606 790.5151        7        7 #> 7 Weibull (AFT) 767.2281 773.0826        1        1"},{"path":[]},{"path":"https://maple-health-group.github.io/easysurv/index.html","id":"fonts","dir":"","previous_headings":"Known Issues","what":"Fonts","title":"Estimate and Inspect Parametric Survival Models","text":"many cases, changing fonts R plots can challenging . standard plots produced easysurv use Roboto Condensed font. R attempts load font calling library(easysurv). see following initialization plot start-:  font display correctly. recommend calling library(easysurv) . font displays expected, disregard font-related warnings R may display. want show easysurv plots R Markdown file, consider adding fig.showtext = TRUE code chunk options avoid font size issues.","code":""},{"path":"https://maple-health-group.github.io/easysurv/index.html","id":"future-tasks","dir":"","previous_headings":"","what":"Future Tasks","title":"Estimate and Inspect Parametric Survival Models","text":"Expand test framework increased coverage. Expand diagnostic test capabilities additional outputs plots. Create additional vignettes workflows (e.g., mixture cure analysis, spline analysis).","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/add_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an Excel worksheet through openxlsx if it doesn't already exist — add_sheet","title":"Add an Excel worksheet through openxlsx if it doesn't already exist — add_sheet","text":"Checks sheet specified name exists, creates needed.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/add_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an Excel worksheet through openxlsx if it doesn't already exist — add_sheet","text":"","code":"add_sheet(wb, sheet_name)"},{"path":"https://maple-health-group.github.io/easysurv/reference/add_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an Excel worksheet through openxlsx if it doesn't already exist — add_sheet","text":"wb Workbook object containing worksheet sheet_name desired worksheet name","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/add_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an Excel worksheet through openxlsx if it doesn't already exist — add_sheet","text":"Worksheet added (required) wb object.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/add_sheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an Excel worksheet through openxlsx if it doesn't already exist — add_sheet","text":"","code":"if (FALSE) { # To add }"},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether survival models extrapolations converge for survival analysis — check_converged","title":"Check whether survival models extrapolations converge for survival analysis — check_converged","text":"function checks whether survival model extrapolations converge fitting models using fit.models function checking convergence. Extrapolations converge excluded output.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether survival models extrapolations converge for survival analysis — check_converged","text":"","code":"check_converged(formula, data, dists)"},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether survival models extrapolations converge for survival analysis — check_converged","text":"formula formula specifying model used, form Surv(time,event)~strata[+covariates] /codeflexsurv terms. data data frame containing data used analysis. must contain data time event variables. dists Name vector names distribution(s) used.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether survival models extrapolations converge for survival analysis — check_converged","text":"vector distribution names converged.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether survival models extrapolations converge for survival analysis — check_converged","text":"","code":"if (FALSE) { library(survival)  check_converged(   formula = Surv(time, status) ~ as.factor(sex),   data = lung[1:7,],   dists = c(\"exponential\", \"weibull\", \"gengamma\", \"lognormal\") ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_cure.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether cure models converge for survival analysis — check_converged_cure","title":"Check whether cure models converge for survival analysis — check_converged_cure","text":"function checks whether cure models specified different distributions converge.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_cure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether cure models converge for survival analysis — check_converged_cure","text":"","code":"check_converged_cure(formula, data, dists)"},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_cure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether cure models converge for survival analysis — check_converged_cure","text":"formula formula specifying model used, form Surv(time, event) ~ strata[+covariates] flexsurv terms. data data frame containing data used analysis. must contain data time event variables. dists Name vector names distribution(s) used.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_cure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether cure models converge for survival analysis — check_converged_cure","text":"vector distribution names corresponding cure models converged.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_cure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether cure models converge for survival analysis — check_converged_cure","text":"","code":"if (FALSE) { library(survival)  check_converged_cure(   formula = Surv(time, status) ~ as.factor(sex),   data = lung[1:7,],   dists = c(\"exponential\", \"weibull\", \"gengamma\", \"lognormal\") ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_splines.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether spline models converge — check_converged_splines","title":"Check whether spline models converge — check_converged_splines","text":"function checks whether spline models specified different knot configurations converge.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_splines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether spline models converge — check_converged_splines","text":"","code":"check_converged_splines(formula, data, dists)"},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_splines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether spline models converge — check_converged_splines","text":"formula formula specifying model used, form Surv(time, event) ~ strata[+covariates] flexsurv terms. data data frame containing data used analysis. must contain data time event variables. dists data frame columns knots scale specifying number knots used type spline model executed respectively. possible models : Proportional hazards model (scale = \"hazard\"), probit model (scale = \"normal\"), proportional odds model (scale = \"odds\").","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_splines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether spline models converge — check_converged_splines","text":"modified version dists input dataframe removing models converge.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/check_converged_splines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether spline models converge — check_converged_splines","text":"","code":"if (FALSE) { library(survival)  formula <- Surv(time, status) ~ as.factor(sex) dists <- data.frame(knots = c(3, 5),                     scale = rep(\"normal\", 2)) check_converged_splines(formula, data = lung[1:9,], dists) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_adtte.html","id":null,"dir":"Reference","previous_headings":"","what":"Example clinical trial data from ggsurvfit — easy_adtte","title":"Example clinical trial data from ggsurvfit — easy_adtte","text":"Background example simulated data set based large phase III clinical trials breast cancer ALTTO trial https://ascopubs.org/doi/abs/10.1200/JCO.2015.62.1797. example “trial” aims determine combination two therapies tablemab (T) plus vismab (V) improves outcomes metastatic human epidermal growth factor 2–positive breast cancer increases pathologic complete response neoadjuvant setting (.e. treatment given first step shrink tumor main treatment surgery).","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_adtte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example clinical trial data from ggsurvfit — easy_adtte","text":"","code":"easy_adtte"},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_adtte.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example clinical trial data from ggsurvfit — easy_adtte","text":"data set contains following variables: STUDYID study identifier. code unique clinical trial SUBJID subject identifier. Numeric ID unique patient USUBJID unique subject identifier. Text ID combining study patient IDs AGE age randomisation (years) STR01 Hormone receptor status randomisation STR01N Hormone receptor positive (Numeric) STR01L Hormone receptor positive (Long format) STR02 Prior Radiotherapy randomisation STR02N Prior Radiotherapy randomisation (Numeric) STR02L Prior Radiotherapy randomisation (Long format) TRT01P Planned treatment assigned randomisation TRT01PN Planned treatment assigned randomisation (Numeric) PARAM Analysis parameter: Progression free survival PARAMCD Analysis parameter code AVAL Analysis value (time event (years) CNSR Censoring (0 = Event, 1 = Censored) EVNTDESC Event description CNSDTDSC Censoring description DCTREAS Discontinuation study reason","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_adtte.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example clinical trial data from ggsurvfit — easy_adtte","text":"https://github.com/VIS-SIG/Wonderful-Wednesdays/tree/master/data/2020/2020-04-08","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_adtte.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example clinical trial data from ggsurvfit — easy_adtte","text":"trial four treatment arms, patients centrally confirmed human epidermal growth factor 2-positive early breast cancer randomly assigned 1 year adjuvant therapy V, T, sequence (T V), combination (T+V) 52 weeks. primary end point progression-free survival (PFS) defined Cancer.gov: '“length time treatment disease, cancer, patient lives disease get worse. clinical trial, measuring progression-free survival one way see well new treatment works”'. number baseline measurements (taken randomization) also included age, hormone receptor status prior radiotherapy treatment. Additional details reasons study discontinuation censoring event description also included. data set adopts abridged version CDISC ADaM ADTTE time event data model. See info CDISC ADaM data standards https://www.cdisc.org/standards/foundational/adam specifically ADTTE time event data model https://www.cdisc.org/standards/foundational/adam/adam-basic-data-structure-bds-time-event-tte-analyses-v1-0.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_bc.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Copy of flexsurv::bc — easy_bc","title":"Formatted Copy of flexsurv::bc — easy_bc","text":"copy bc data set exported flexsurv package. data set, however, column labels assigned.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_bc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Copy of flexsurv::bc — easy_bc","text":"","code":"easy_bc"},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_bc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Formatted Copy of flexsurv::bc — easy_bc","text":"data set contains following variables: censrec 0 = Censored, 1 = Dead rectime Time censoring death days group Prognostic group: Good, Medium, Poor recyrs Time censoring death years","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_bc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Formatted Copy of flexsurv::bc — easy_bc","text":"flexsurv::bc","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_lung.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted Copy of survival::lung — easy_lung","title":"Formatted Copy of survival::lung — easy_lung","text":"copy lung data set exported survival package. data set, however, column labels assigned time months.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_lung.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Copy of survival::lung — easy_lung","text":"","code":"easy_lung"},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_lung.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Formatted Copy of survival::lung — easy_lung","text":"data set contains following variables: inst Institution code time Survival time, months status Censoring status, 1 = censored, 2 = dead age Age sex Sex, 1 = Male, 2 = Female ph.ecog ECOG Performance Status (Physician) ph.karno Karnofsky performance score (Physician) pat.karno Karnofsky performance score (Patient) meal.cal Calories consumed wt.loss Weight loss, lbs","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easy_lung.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Formatted Copy of survival::lung — easy_lung","text":"survival::lung","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/easysurv-package.html","id":null,"dir":"Reference","previous_headings":"","what":"easysurv: Estimate and inspect parametric survival models — easysurv-package","title":"easysurv: Estimate and inspect parametric survival models — easysurv-package","text":"Functions streamline process fitting parametric models extrapolate survival data. easysurv can fit data via simple parametric modelling, mixture cure modelling spline modelling.","code":""},{"path":[]},{"path":"https://maple-health-group.github.io/easysurv/reference/easysurv-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"easysurv: Estimate and inspect parametric survival models — easysurv-package","text":"Maintainer: Niall Davison niall.davison@maplehealthgroup.com Authors: Brad Kievit brad.kievit@maplehealthgroup.com","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/fit.models.cure.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit parametric mixture cure survival models for health economic evaluations — fit.models.cure","title":"Fit parametric mixture cure survival models for health economic evaluations — fit.models.cure","text":"fit.models.cure fits parametric mixture cure survival models health economic evaluations.code fit.models.cure primarily taken equivalent DARTH function, minor edits functionality documentation.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/fit.models.cure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit parametric mixture cure survival models for health economic evaluations — fit.models.cure","text":"","code":"fit.models.cure(formula = NULL, data, distr = NULL, method = \"mle\", ...)"},{"path":"https://maple-health-group.github.io/easysurv/reference/fit.models.cure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit parametric mixture cure survival models for health economic evaluations — fit.models.cure","text":"formula formula specifying model used, form Surv(time,event)~strata[+covariates] /codeflexsurv. Recommend class(strata) == \"factor\". data data frame containing data used analysis. must contain data 'event' variable. distr (vector ) string(s) containing name(s) model(s) fitted. Available options : \"exponential\",\"gamma\", \"genf\", \"gengamma\",\"gompertz\",\"weibull\", \"weibullPH\",\"loglogistic\",\"lognormal\". method method used estimation. Current possible values \"mle\". ... Additional arguments runMLE.cure.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/fit.models.cure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit parametric mixture cure survival models for health economic evaluations — fit.models.cure","text":"list containing fitted parametric mixture cure survival models specified distribution. list includes model objects additional information AIC, BIC, KM data. object analogous object generated fit.models function, added cure fraction.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/fit.models.cure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit parametric mixture cure survival models for health economic evaluations — fit.models.cure","text":"","code":"if (FALSE) { library(survival)  fit <- fit.models.cure(Surv(time, status) ~ as.factor(sex),   data = lung,   distr = c(\"exponential\", \"weibull\"), method = \"mle\" ) print(fit) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/fit_splines.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit spline models in survival analysis for health economic evaluations — fit_splines","title":"Fit spline models in survival analysis for health economic evaluations — fit_splines","text":"function fits spline models specified different knot configurations survival data.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/fit_splines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit spline models in survival analysis for health economic evaluations — fit_splines","text":"","code":"fit_splines(formula, dists, data, method = \"mle\")"},{"path":"https://maple-health-group.github.io/easysurv/reference/fit_splines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit spline models in survival analysis for health economic evaluations — fit_splines","text":"formula formula specifying model used, form Surv(time, event) ~ strata[+covariates] flexsurv terms. dists data frame columns knots scale specifying number knots used type spline model executed respectively. possible models : Proportional hazards model (scale = \"hazard\"), probit model (scale = \"normal\"), proportional odds model (scale = \"odds\"). data data frame containing data used analysis. must contain data time event variables. method add details","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/fit_splines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit spline models in survival analysis for health economic evaluations — fit_splines","text":"list containing fitted spline models model fitting information.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/fit_splines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit spline models in survival analysis for health economic evaluations — fit_splines","text":"","code":"if (FALSE) { library(survival)  formula <- Surv(time, status) ~ as.factor(sex) dists <- data.frame(knots = c(3, 5), scale = rep(\"normal\", 2)) spline_fit <- fit_splines(formula, dists, data = lung) print(spline_fit) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_averages.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain median, mean, and restricted mean survival times. — get_fit_averages","title":"Obtain median, mean, and restricted mean survival times. — get_fit_averages","text":"function obtains median, mean, restricted mean survival times stored flexsurvreg fit.models object.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_averages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain median, mean, and restricted mean survival times. — get_fit_averages","text":"","code":"get_fit_averages(mod)"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_averages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain median, mean, and restricted mean survival times. — get_fit_averages","text":"mod specific model fit.models object obtained fit.models function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_averages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain median, mean, and restricted mean survival times. — get_fit_averages","text":"data frame containing median, mean restricted mean survival times (95% confidence intervals) calculable.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_averages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain median, mean, and restricted mean survival times. — get_fit_averages","text":"","code":"if (FALSE) { library(survHE) library(flexsurv)  # Example usage with a fit.models object fit <- fit.models(Surv(time, status) ~ as.factor(sex),   data = lung,   distr = c(\"exponential\", \"weibull\") ) lapply(fit$models, get_fit_averages)  # Example using a flexsurv object fit <- flexsurvreg(Surv(time, status) ~ as.factor(sex),   data = lung,   dist = \"exponential\" ) get_fit_averages(fit) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter estimates from a fit.models object — get_fit_coef","title":"Get parameter estimates from a fit.models object — get_fit_coef","text":"function retrieves parameter estimates flexsurvreg flexsurvcure object, listed output fit.models function $models. flexsurv object can alternately created using flexsurvreg flexsurvcure.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter estimates from a fit.models object — get_fit_coef","text":"","code":"get_fit_coef(mod, method = \"mle\")"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter estimates from a fit.models object — get_fit_coef","text":"mod object class flexsurv obtained thefit.models, flexsurvreg flexsurvcure functions. method method used estimate parameters. default 'mle' corresponds maximum likelihood estimation. Alternatively, 'hmc' specified, function assumes model fitted using Hamiltonian Monte Carlo (HMC) via `rstan` package. case, parameter estimates obtained HMC model. imported intentionally.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameter estimates from a fit.models object — get_fit_coef","text":"data frame containing parameter estimates fitted models. data frame two columns: parameter Coef. parameter column lists names model parameters, Coef column contains corresponding estimated values.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameter estimates from a fit.models object — get_fit_coef","text":"","code":"if (FALSE) { library(survHE) library(flexsurv)  # Example usage with a fit.models object fit <- fit.models(Surv(time, status) ~ as.factor(sex),   data = lung,   distr = c(\"exponential\", \"weibull\") ) lapply(fit$models, get_fit_coef)  # Example using a flexsurv object fit <- flexsurvreg(Surv(time, status) ~ as.factor(sex),   data = lung,   dist = \"exponential\" ) get_fit_coef(fit)  # Example usage with a fit.models object fitted using HMC fit_hmc <- fit.models(Surv(time, status) ~ as.factor(sex),   data = lung,   distr = c(\"exponential\", \"weibull\"), method = \"hmc\" ) lapply(fit_hmc, get_fit_coef) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare statistical goodness-of-fit between models in a fit.models object — get_fit_comparison","title":"Compare statistical goodness-of-fit between models in a fit.models object — get_fit_comparison","text":"function compares statistical goodness--fit models stored fit.models object. retrieves organizes AIC BIC ranks accordingly.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare statistical goodness-of-fit between models in a fit.models object — get_fit_comparison","text":"","code":"get_fit_comparison(mod)"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare statistical goodness-of-fit between models in a fit.models object — get_fit_comparison","text":"mod object class fit.models obtained fit.models function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare statistical goodness-of-fit between models in a fit.models object — get_fit_comparison","text":"data frame containing comparison goodness--fit measures models. data frame columns model names, AIC values, BIC values, AIC ranks, BIC ranks.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare statistical goodness-of-fit between models in a fit.models object — get_fit_comparison","text":"","code":"if (FALSE) { library(survHE)  fit <- fit.models(Surv(time, status) ~ as.factor(sex),   data = lung,   distr = c(\"exponential\", \"weibull\") ) fit_comparison <- get_fit_comparison(fit) print(fit_comparison) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the variance-covariance matrix from a fit.models object — get_fit_vcov","title":"Get the variance-covariance matrix from a fit.models object — get_fit_vcov","text":"function retrieves variance-covariance matrix flexsurvreg flexsurvcure object, listed output fit.models function $models. flexsurv object can alternately created using flexsurvreg flexsurvcure. variance-covariance matrix provides information estimated variances covariances model parameters.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the variance-covariance matrix from a fit.models object — get_fit_vcov","text":"","code":"get_fit_vcov(mod)"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the variance-covariance matrix from a fit.models object — get_fit_vcov","text":"mod object class flexsurv obtained fit.models, flexsurvreg flexsurvcure functions.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the variance-covariance matrix from a fit.models object — get_fit_vcov","text":"data frame containing variance-covariance matrix model parameters. data frame column names corresponding parameters row names representing parameter pairs. values matrix represent estimated variances covariances.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the variance-covariance matrix from a fit.models object — get_fit_vcov","text":"","code":"if (FALSE) { library(survHE)  # Example usage with a fit.models object fit <- fit.models(Surv(time, status) ~ as.factor(sex),   data = lung, distr = c(\"exponential\", \"weibull\") ) lapply(fit, get_fit_vcov)  # Example using a flexsurv object fit <- flexsurvreg(Surv(time, status) ~ as.factor(sex), data = lung, dist = \"exponential\") get_fit_vcov(fit) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign names as v1, v2, v3 to variance covariance matrices — get_fit_vcov_names","title":"Assign names as v1, v2, v3 to variance covariance matrices — get_fit_vcov_names","text":"function assigns names v1, v2, v3, etc., variance-covariance matrices obtained flexsurvreg flexsurvcure object,listed output fit.models function $models. flexsurv object can alternately created using flexsurvreg flexsurvcure. intended facilitate tabulated output applications exporting Excel.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign names as v1, v2, v3 to variance covariance matrices — get_fit_vcov_names","text":"","code":"get_fit_vcov_names(mod)"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign names as v1, v2, v3 to variance covariance matrices — get_fit_vcov_names","text":"mod object class flexsurv obtained fit.models, flexsurvreg flexsurvcure functions. mod obtained fit.models, must specify $models element object.Ensure , formula used make mod (Surv(time,event)~strata[+covariates]), class(strata) == \"factor\".","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign names as v1, v2, v3 to variance covariance matrices — get_fit_vcov_names","text":"data frame representing variance-covariance matrix named columns. rows correspond variables coefficients, columns named v1, v2, v3, etc., denoting variance-covariance elements.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_fit_vcov_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign names as v1, v2, v3 to variance covariance matrices — get_fit_vcov_names","text":"","code":"if (FALSE) { library(survHE)  # Example usage with a fit.models object fit <- fit.models(Surv(time, status) ~ as.factor(sex),   data = lung, distr = c(\"exponential\", \"weibull\") ) lapply(fit$models, get_fit_vcov_names)  # Example using a flexsurv object fit <- flexsurvreg(Surv(time, status) ~ as.factor(sex), data = lung, dist = \"exponential\") get_fit_vcov_names(fit) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_median_FU.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the median follow-up time (or median time to censoring). — get_median_FU","title":"Calculate the median follow-up time (or median time to censoring). — get_median_FU","text":"Reverses censoring/event variable derive median follow-time.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_median_FU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the median follow-up time (or median time to censoring). — get_median_FU","text":"","code":"get_median_FU(data, time, event, strata)"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_median_FU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the median follow-up time (or median time to censoring). — get_median_FU","text":"data tibble data frame containing survival data columns time, event strata. time name time variable data event name event variable data strata name strata variable data","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_median_FU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the median follow-up time (or median time to censoring). — get_median_FU","text":"","code":"if (FALSE) { # Load required packages library(survival)  input_data <- survival::lung  surv_data <- tibble(   time = input_data$time,   event = input_data$status - 1,   strata = as.factor(input_data$sex) )  median_follow_up <- get_median_FU(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\" ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a parameter table with the vcov matrix from a fit.models object — get_results_table","title":"Generate a parameter table with the vcov matrix from a fit.models object — get_results_table","text":"function generates parameter table along variance-covariance matrix obtained \"models\" element fit.models object. parameter table includes information model labels, parameter names, estimated coefficients, named variance-covariance elements. function also assigns appropriate labels covariance markers better interpretation. table useful summarizing results fitted survival models can exported used analysis.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a parameter table with the vcov matrix from a fit.models object — get_results_table","text":"","code":"get_results_table(mod)"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a parameter table with the vcov matrix from a fit.models object — get_results_table","text":"mod \"$models\" element object class fit.models (.e. fit.models.object[[\"models\"]]) obtained fit.models function. Ensure , formula used make mod (Surv(time,event)~strata[+covariates]), class(strata) == \"factor\".","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a parameter table with the vcov matrix from a fit.models object — get_results_table","text":"data frame representing parameter table estimated coefficients named variance-covariance elements. table contains columns model labels, parameter names, estimated coefficients, named variance-covariance elements.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a parameter table with the vcov matrix from a fit.models object — get_results_table","text":"","code":"if (FALSE) { library(survHE)  fit <- fit.models(Surv(time, status) ~ as.factor(sex),   data = lung,   distr = c(\"exponential\", \"weibull\") ) results_table <- get_results_table(fit$models) print(results_table) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table_cure.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a parameter table with vcov matrix the object generated by\nfit.models.cure — get_results_table_cure","title":"Generate a parameter table with vcov matrix the object generated by\nfit.models.cure — get_results_table_cure","text":"function generates parameter table along variance-covariance matrix obtained list cure models. parameter table includes information model labels, parameter estimates, associated variance-covariance matrices.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table_cure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a parameter table with vcov matrix the object generated by\nfit.models.cure — get_results_table_cure","text":"","code":"get_results_table_cure(mod)"},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table_cure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a parameter table with vcov matrix the object generated by\nfit.models.cure — get_results_table_cure","text":"mod \"$models\" element list object created single-arm (treatment effect) fit.models.cure function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table_cure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a parameter table with vcov matrix the object generated by\nfit.models.cure — get_results_table_cure","text":"data frame parameter table variance-covariance matrix cure models.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/get_results_table_cure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a parameter table with vcov matrix the object generated by\nfit.models.cure — get_results_table_cure","text":"","code":"if (FALSE) { library(survHE) fit <- fit.models.cure(Surv(time, status) ~ 1,   data = lung, dist = c(\"exponential\", \"weibull\") ) get_results_table_cure(fit$models) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_KM.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a Kaplan-Meier Survival Curve using ggsurvplot with\nCustom Defaults — plot_KM","title":"Plots a Kaplan-Meier Survival Curve using ggsurvplot with\nCustom Defaults — plot_KM","text":"function generates Kaplan-Meier survival curve plot using ggsurvplot function. allows customization various plot elements providing sensible defaults align easysurv theme.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_KM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a Kaplan-Meier Survival Curve using ggsurvplot with\nCustom Defaults — plot_KM","text":"","code":"plot_KM(   fit,   title = NULL,   subtitle = NULL,   legend.labs = NULL,   legend.title = ggplot2::element_blank(),   legend.position = \"top\",   conf.int = TRUE,   conf.int.alpha = 0.3,   conf.int.style = \"ribbon\",   tables.col = \"black\",   risk.table = TRUE,   risk.table.pos = \"out\",   risk.table.fontsize = 4,   risk.table.title = \"Number at risk\",   cumevents = FALSE,   cumcensor = FALSE,   surv.median.line = \"hv\",   axes.offset = FALSE,   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   risk.table.theme = theme_easysurv(grid = FALSE),   use_plotly = FALSE,   fun = NULL,   surv.scale = \"percent\",   xlim = c(0, max(fit$time)),   ... )"},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_KM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a Kaplan-Meier Survival Curve using ggsurvplot with\nCustom Defaults — plot_KM","text":"fit survfit object list survfit objects. title Optional. title KM plot. Default NULL subtitle Optional. subtitle KM plot. Default NULL legend.labs character vector specifying legend labels. Used replace names strata fit. given order strata. legend.title title legend. legend.position position legend plot. Allowed values \"left\", \"right\", \"bottom\", \"top\", \"none\". conf.int Logical value indicating whether display confidence interval. conf.int.alpha transparency level confidence interval fill color. Value range <0, 1>, 0 fully transparent 1 fully opaque. conf.int.style style confidence interval. Allowed values \"ribbon\" \"step\". tables.col Colour used tables main plot. Default \"black\". Can \"strata\". risk.table Logical value indicating whether show \"number risk\" table. risk.table.pos position risk table relative main plot. Allowed values \"\" (outside) \"\" (inside). risk.table.fontsize font size risk table. risk.table.title title risk table. cumevents Logical include cumulative events table. Default FALSE cumcensor Logical include cumulative censoring table. Default FALSE surv.median.line Specifies whether draw horizontal vertical line median survival time. Allowed values \"none\", \"hv\" (horizontal vertical), \"h\" (horizontal), \"v\" (vertical). axes.offset Logical value indicating whether set plot axes start origin. Default FALSE. FALSE, recommend xlim set something like c(0, max(fit$time)) cut end. font.family font chart risk table. Default \"Roboto Condensed\". plot.theme function, ggplot2 theme name. Default value theme_easysurv(). Allowed values include ggplot2 official themes: see theme. risk.table.theme function, ggplot2 theme name. Default value theme_easysurv(grid = FALSE). Allowed values include ggplot2 official themes:see theme. use_plotly Optional. Whether return plotly output KM plot. Default FALSE. fun Survival function. Can take \"survival\", \"event\", \"cumhaz\", \"cloglog\" surv.scale Scale transformation survival curves. ggsurvplot allows \"default\" \"percent\". FUN specified, easysurv default \"percent\". xlim Two numeric values, specifying left/lower limit right/upper limit scale. ... Additional arguments passed ggsurvplot function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_KM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a Kaplan-Meier Survival Curve using ggsurvplot with\nCustom Defaults — plot_KM","text":"list containing plot object risk table object.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_KM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots a Kaplan-Meier Survival Curve using ggsurvplot with\nCustom Defaults — plot_KM","text":"","code":"if (FALSE) { library(survival) fit <- survfit(Surv(time, status) ~ as.factor(sex), data = lung) plot_KM(fit, legend.title = \"Sex\", legend.position = \"bottom\", conf.int = TRUE) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot extrapolations of survHE objects with Custom Defaults — plot_fits","title":"Plot extrapolations of survHE objects with Custom Defaults — plot_fits","text":"function generates plot extrapolations based survHE objects obtained fit.models function. allows customizations various plot elements providing sensible defaults. function supports addition Kaplan-Meier (KM) curve plot desired.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot extrapolations of survHE objects with Custom Defaults — plot_fits","text":"","code":"plot_fits(   models,   add.km = TRUE,   title = \"\",   subtitle = \"\",   ylab = \"Survival probability\",   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   use_plotly = FALSE,   t = NULL,   ... )"},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot extrapolations of survHE objects with Custom Defaults — plot_fits","text":"models output fit.models, fit.models.cure fit_splines. add.km Logical value indicating whether add Kaplan-Meier (KM) curve plot. title title plot. subtitle subtitle plot. ylab label y-axis. font.family name font KM plot. Default \"Roboto Condensed\". plot.theme ggplot2 theme plot. Default theme_easysurv(). use_plotly Optional. Whether return plotly output plots. Default FALSE. t vector times plot ... Additional parameters passed plot.survHE function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_fits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot extrapolations of survHE objects with Custom Defaults — plot_fits","text":"plot object extrapolations custom defaults.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_fits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot extrapolations of survHE objects with Custom Defaults — plot_fits","text":"","code":"if (FALSE) { library(survHE)  models <- survHE::fit.models(   formula = Surv(time, status) ~ as.factor(sex),   data = lung,   distr = c(\"exp\", \"weibull\"),   method = \"mle\" )  plot_fits(models,   title = \"An example chart title\",   subtitle = \"An example chart subtitle\" ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_schoenfeld.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified version of ggcoxdiagnostics to replace\ngather_ and set geom_smooth formulae — plot_schoenfeld","title":"Modified version of ggcoxdiagnostics to replace\ngather_ and set geom_smooth formulae — plot_schoenfeld","text":"Displays diagnostics graphs presenting goodness Cox Proportional Hazards Model fit, can calculated coxph function. function largely identical ggcoxdiagnostics /codesurvminer package minor alterations order accommodate easysurv functionality.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_schoenfeld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified version of ggcoxdiagnostics to replace\ngather_ and set geom_smooth formulae — plot_schoenfeld","text":"","code":"plot_schoenfeld(   fit_coxph,   data,   formula,   hline = TRUE,   sline = TRUE,   sline.se = TRUE,   hline.col = \"red\",   hline.size = 1,   hline.alpha = 1,   hline.yintercept = 0,   hline.lty = \"dashed\",   sline.col = \"blue\",   sline.size = 1,   sline.alpha = 0.3,   sline.lty = \"dashed\",   point.col = \"black\",   point.size = 1,   point.shape = 19,   point.alpha = 1,   title = NULL,   subtitle = NULL,   caption = NULL,   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv() )"},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_schoenfeld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified version of ggcoxdiagnostics to replace\ngather_ and set geom_smooth formulae — plot_schoenfeld","text":"fit_coxph object class coxph.object - created coxph function. data Data fit_coxph formula Formula fit_coxph hline logical - horizontal line added highlight Y=0 level. sline, sline.se logical - smooth line added highlight local average residuals. hline.col, hline.size, hline.lty, hline.alpha, hline.yintercept color, size, linetype, visibility Y-axis coordinate used geom_hline. Used hline = TRUE. sline.col, sline.size, sline.lty, sline.alpha color, size, linetype visibility used geom_smooth. Used sline = TRUE. point.col, point.size, point.shape, point.alpha color, size, shape visibility used points. title, subtitle, caption main title, subtitle caption. font.family Font plot. Default Roboto Condensed. plot.theme ggplot2 theme plot. Default theme_easysurv()","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_schoenfeld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified version of ggcoxdiagnostics to replace\ngather_ and set geom_smooth formulae — plot_schoenfeld","text":"Returns object class ggplot.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_schoenfeld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified version of ggcoxdiagnostics to replace\ngather_ and set geom_smooth formulae — plot_schoenfeld","text":"","code":"if (FALSE) { #to add }"},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_smoothed_hazards.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot smoothed hazards of survival data — plot_smoothed_hazards","title":"Plot smoothed hazards of survival data — plot_smoothed_hazards","text":"function generates plot showing hazards underlying survival data, along hazards predicted different models fit.models object. provides visual comparison observed hazards hazards predicted different models.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_smoothed_hazards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot smoothed hazards of survival data — plot_smoothed_hazards","text":"","code":"plot_smoothed_hazards(   data,   time,   event,   fits,   t,   group = 1,   title = \"\",   subtitle = \"\",   ylab = \"Hazard\",   xlab = \"Time\",   ylimit = NULL,   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   use_plotly = FALSE )"},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_smoothed_hazards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot smoothed hazards of survival data — plot_smoothed_hazards","text":"data survival data data frame columns time event. time name time variable data. event name event variable data. fits fit.models object containing survival models t vector time points calculate hazards. group group number strata title title plot. subtitle subtitle plot. ylab label y-axis. xlab label x-axis. ylimit upper limit y-axis adjust scale plot. font.family name font plot. Default \"Roboto Condensed\". plot.theme ggplot2 theme plot. Default theme_easysurv(). use_plotly Optional. Whether return plotly output plots. Default FALSE.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_smoothed_hazards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot smoothed hazards of survival data — plot_smoothed_hazards","text":"ggplot object representing plot hazards.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/plot_smoothed_hazards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot smoothed hazards of survival data — plot_smoothed_hazards","text":"","code":"if (FALSE) { library(survival)  example <- lung |>   mutate(event = status) |>   select(time, event, sex)  models <- survHE::fit.models(   formula = Surv(time, event) ~ as.factor(sex),   data = example,   distr = c(\"exp\", \"weibull\"),   method = \"mle\" )  plot_smoothed_hazards(   data = example,   time = \"time\",   event = \"event\",   fits = models,   t = 0:2000,   title = \"Smoothed hazards\" ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/predict_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a data frame of predicted survival from a fit.models or\nfit.models.cure object — predict_fits","title":"Generate a data frame of predicted survival from a fit.models or\nfit.models.cure object — predict_fits","text":"function generates data frame predicted survival values based fit.models fit.models.cure object. takes set times group data, returns data frame predicted survival values model input object specified times.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/predict_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a data frame of predicted survival from a fit.models or\nfit.models.cure object — predict_fits","text":"","code":"predict_fits(fits, t, group = 1)"},{"path":"https://maple-health-group.github.io/easysurv/reference/predict_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a data frame of predicted survival from a fit.models or\nfit.models.cure object — predict_fits","text":"fits object obtained fit.models fit.models.cure. t vector times calculate predicted survival, e.g., seq(= 0, = 1000, length.= 100) group cases multiple stratas within one fit.models object, index \"strata\" interest (e.g., data frames two treatments, group = \"1\" group = \"2\")","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/predict_fits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a data frame of predicted survival from a fit.models or\nfit.models.cure object — predict_fits","text":"data frame predicted survival values model specified times.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/predict_fits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a data frame of predicted survival from a fit.models or\nfit.models.cure object — predict_fits","text":"","code":"if (FALSE) { library(survHE)  # Single-arm fits <- fit.models(Surv(time, status) ~ 1,   data = lung,   dist = c(\"exponential\", \"weibull\") ) t <- seq(from = 0, to = 1000, length.out = 100) predict_fits(fits, t, group = 1)  # Double-arm fits <- fit.models(Surv(time, status) ~ as.factor(sex),   data = lung,   dist = c(\"exponential\", \"weibull\") ) t <- seq(from = 0, to = 1000, length.out = 100) predict_fits(fits, t, group = 1) predict_fits(fits, t, group = 2) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/print_quick_KM.html","id":null,"dir":"Reference","previous_headings":"","what":"Print quick_KM objects. — print.quick_KM","title":"Print quick_KM objects. — print.quick_KM","text":"Print quick_KM objects.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/print_quick_KM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print quick_KM objects. — print.quick_KM","text":"","code":"# S3 method for quick_KM print(x, ...)"},{"path":"https://maple-health-group.github.io/easysurv/reference/print_quick_KM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print quick_KM objects. — print.quick_KM","text":"x quick_KM object ... dots future extensions must empty.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/print_quick_PH.html","id":null,"dir":"Reference","previous_headings":"","what":"Print quick_PH objects. — print.quick_PH","title":"Print quick_PH objects. — print.quick_PH","text":"Print quick_PH objects. Print quick_PH objects.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/print_quick_PH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print quick_PH objects. — print.quick_PH","text":"","code":"# S3 method for quick_PH print(x, ...)  # S3 method for quick_PH print(x, ...)"},{"path":"https://maple-health-group.github.io/easysurv/reference/print_quick_PH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print quick_PH objects. — print.quick_PH","text":"x quick_PH object ... dots future extensions must empty.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_KM.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Kaplan-Meier (KM) plot and related KM info. — quick_KM","title":"Generate Kaplan-Meier (KM) plot and related KM info. — quick_KM","text":"Returns easysurv-themed Kaplan-Meier (KM) plot related KM info.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_KM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Kaplan-Meier (KM) plot and related KM info. — quick_KM","text":"","code":"quick_KM(   data,   time,   event,   strata,   strata_labels = NULL,   title = NULL,   subtitle = NULL,   add_time_0 = TRUE,   add_interactive_plot = FALSE,   font.family = \"Roboto Condensed\",   ... )"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_KM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Kaplan-Meier (KM) plot and related KM info. — quick_KM","text":"data tibble data frame containing survival data columns time, event strata. time name time variable data event name event variable data strata name strata variable data strata_labels Optional. character vector containing names strata (default NULL). Provide consistent order levels(.factor(data$strata)). title Optional. title KM plot. Default NULL subtitle Optional. subtitle KM plot. Default NULL add_time_0 Optional. Uses survival::survfit0 add point starting time (time 0) survfit object's elements. useful plotting. Default TRUE. add_interactive_plot Optional. Whether include plotly output KM plot. Default FALSE. font.family name font KM plot. Default \"Roboto Condensed\". ... Ellipses pass arguments plot_KM.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_KM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Kaplan-Meier (KM) plot and related KM info. — quick_KM","text":"object class quick_KM components: KM_all survfit model output based survival::survfit(survival::Surv(time, event) ~ .factor(strata) KM_indiv survfit model output based survival::survfit(survival::Surv(time, event) ~ 1 strata KM_stepped table summarizing KM survival time, presented 'stepped' manner support plotting Excel. KM_plot KM plot easysurv theme. KM_summary Summary information strata. Includes sample sizes, number events, restricted mean survival, median, confidence intervals","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_KM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Kaplan-Meier (KM) plot and related KM info. — quick_KM","text":"","code":"if (FALSE) { # Load required packages library(survival)  input_data <- survival::lung  surv_data <- tibble(   time = input_data$time,   event = input_data$status - 1,   strata = as.factor(input_data$sex) )  KM_check <- quick_KM(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\" ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_PH.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess the proportional hazards assumptions with plots and statistical tests. — quick_PH","title":"Assess the proportional hazards assumptions with plots and statistical tests. — quick_PH","text":"Assess proportional hazards assumptions plots statistical tests.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_PH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess the proportional hazards assumptions with plots and statistical tests. — quick_PH","text":"","code":"quick_PH(   data,   time,   event,   strata,   plot.theme = theme_easysurv(),   risk.table.theme = theme_easysurv(grid = FALSE),   strata_labels = NULL,   subtitle = NULL,   font.family = \"Roboto Condensed\",   ... )"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_PH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess the proportional hazards assumptions with plots and statistical tests. — quick_PH","text":"data tibble dataframe containing survival data columns time, event strata. time name time variable data event name event variable data strata name strata variable data plot.theme ggplot2 theme cloglog schoenfeld plots. Default theme_easysurv() risk.table.theme ggplot2 theme risk table clogclog plot. strata_labels Optional. character vector containing names stratas (default NULL). Provide consistent order levels(.factor(data$strata)). subtitle Optional. subtitle plots (default NULL). Consider using endpoint name. font.family Font plot. Default Roboto Condensed. ... Optional arguments cloglogplot (created plot_KM)","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_PH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess the proportional hazards assumptions with plots and statistical tests. — quick_PH","text":"object class quick_PH containing following elements: cloglogplot log cumulative hazard plot easysurv theme coxph_HR summary.coxPH object containing statistical test outputs, namely Cox PH hazard ratio confidence intervals. coxzph_ph_test summary.coxPH object containing statistical test outputs schoenfeld_plot Schoenfeld residuals plot easysurv theme","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_PH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess the proportional hazards assumptions with plots and statistical tests. — quick_PH","text":"","code":"if (FALSE) { # Load required packages library(survival) library(easysurv)  input_data <- survival::lung  surv_data <- tibble(   time = input_data$time,   event = input_data$status - 1,   strata = as.factor(input_data$sex) )  PH_check <- quick_PH(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\" ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information and plots for standard parametric survival models — quick_fit","title":"Get information and plots for standard parametric survival models — quick_fit","text":"function checks whether standard parametric survival models converge, fitting models via fit.models form survival::Surv(time,event) ~ 1 (unless otherwise specified) strata, models without warnings/errors, returns fit information plots.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information and plots for standard parametric survival models — quick_fit","text":"","code":"quick_fit(   data,   time,   event,   strata,   dists,   times = NULL,   strata_labels = NULL,   formula = NULL,   xlab = \"Time\",   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   add_interactive_plots = FALSE )  quick_fit_standard(   data,   time,   event,   strata,   dists,   times = NULL,   strata_labels = NULL,   formula = NULL,   xlab = \"Time\",   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   add_interactive_plots = FALSE )"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information and plots for standard parametric survival models — quick_fit","text":"data tibble data frame containing survival data columns time, event strata. time name time variable data event name event variable data strata name strata variable data dists (vector ) string(s) containing name(s) model(s) fitted. Available options : \"exponential\", \"gamma\", \"genf\", \"gengamma\", \"gompertz\", \"weibull\", \"weibullPH\", \"loglogistic\", \"lognormal\". times Optional. set times calculate predicted survival. default seq(= 0, = ceiling(max(data$time)*2.5), length.= 200) strata_labels Optional. character vector containing names stratas (default NULL). Provide consistent order levels(.factor(data$strata)). formula Optional. Surv() formula. Default survival::Surv(time,event) ~ 1 xlab x-axis label plots. Default \"Time\". font.family name font plots. Default \"Roboto Condensed\". plot.theme ggplot2 theme plots. Default theme_easysurv(). add_interactive_plots Optional. Whether include plotly outputs hazard fit plots. Default FALSE.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information and plots for standard parametric survival models — quick_fit","text":"object class quick_fit components: converged list distributions converged fits survHE::fit.models output hazard_plots Smoothed hazard plots strata hazard_plotly Interactive hazard plots (add_interactive_plots = TRUE) fit_plots Plot extrapolations specified times parameter fit_plotly Interactive fit plots (add_interactive_plots = TRUE) goodness_of_fit AIC BIC output, alongside ranks, distribution surv_params flexsurv parameters model vcov matrix fit_averages median, mean restricted mean survival times distribution predicted_fits Predicted survival proportions times parameter, provided","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information and plots for standard parametric survival models — quick_fit","text":"","code":"if (FALSE) { # Load required packages library(survival)  input_data <- survival::lung  surv_data <- tibble(   time = input_data$time,   event = input_data$status - 1,   strata = as.factor(input_data$sex) )  fit_check <- quick_fit(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\",   dists = c(\"weibull\", \"exp\") ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_cure.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information and plots for flexsurvcure mixture cure models — quick_fit_cure","title":"Get information and plots for flexsurvcure mixture cure models — quick_fit_cure","text":"function checks whether standard parametric survival models converge, fitting models via \"flexsurvcure\", models without warnings/errors, returns fit information plots.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_cure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information and plots for flexsurvcure mixture cure models — quick_fit_cure","text":"","code":"quick_fit_cure(   data,   time,   event,   strata,   dists,   times = NULL,   strata_labels = NULL,   formula = NULL,   xlab = \"Time\",   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   add_interactive_plots = FALSE )"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_cure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information and plots for flexsurvcure mixture cure models — quick_fit_cure","text":"data tibble data frame containing survival data columns time, event strata. time name time variable data event name event variable data strata name strata variable data dists (vector ) string(s) containing name(s) model(s) fitted. Available options : \"exponential\", \"gamma\", \"genf\", \"gengamma\", \"gompertz\", \"weibull\", \"weibullPH\", \"loglogistic\", \"lognormal\". times Optional. set times calculate predicted survival. default seq(= 0, = ceiling(max(data$time)*2.5), length.= 200) strata_labels Optional. character vector containing names stratas (default NULL). Provide consistent order levels(.factor(data$strata)). formula Optional. Surv() formula. Default survival::Surv(time,event) ~ 1 xlab x-axis label plots. Default \"Time\". font.family name font KM plot. Default \"Roboto Condensed\". plot.theme ggplot2 theme plots. Default theme_easysurv(). add_interactive_plots Optional. Whether include plotly outputs hazard fit plots. Default FALSE.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_cure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information and plots for flexsurvcure mixture cure models — quick_fit_cure","text":"object class quick_fit_cure containing following elements: converged list distributions converged fits survHE::fit.models output hazard_plots Smoothed hazard plots strata hazard_plotly Interactive hazard plots (add_interactive_plots = TRUE) fit_plots Plot extrapolations specified times parameter fit_plotly Interactive fit plots (add_interactive_plots = TRUE) goodness_of_fit AIC BIC output, alongside ranks, distribution surv_params flexsurv parameters model vcov matrix fit_averages median, mean restricted mean survival times distribution cure_fractions cure fractions distribution, assuming logistic link. predicted_fits tibble showing predicted survival proportions times parameter, provided","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_cure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information and plots for flexsurvcure mixture cure models — quick_fit_cure","text":"","code":"if (FALSE) { # Load required packages library(survival)  input_data <- survival::lung  surv_data <- tibble(   time = input_data$time,   event = input_data$status - 1,   strata = as.factor(input_data$sex) )  fit_check_cure <- quick_fit_cure(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\",   dists = c(\"weibull\", \"exp\") ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_joint.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit standard parametric survival models with a treatment covariate — quick_fit_joint","title":"Fit standard parametric survival models with a treatment covariate — quick_fit_joint","text":"function fits standard joint parametric survival models treatment covariate, checking convergence, generates various plots fit information.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_joint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit standard parametric survival models with a treatment covariate — quick_fit_joint","text":"","code":"quick_fit_joint(   data,   time,   event,   strata,   dists,   times = NULL,   strata_labels = NULL,   formula = NULL,   xlab = \"Time\",   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   add_interactive_plots = FALSE )"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_joint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit standard parametric survival models with a treatment covariate — quick_fit_joint","text":"data tibble data frame containing survival data columns time, event strata. time name time variable data event name event variable data strata name strata variable data dists (vector ) string(s) containing name(s) model(s) fitted. Available options : \"exponential\", \"gamma\", \"genf\", \"gengamma\", \"gompertz\", \"weibull\", \"weibullPH\", \"loglogistic\", \"lognormal\". times Optional. set times calculate predicted survival. default seq(= 0, = ceiling(max(data$time)*2.5), length.= 200) strata_labels Optional. character vector containing names stratas (default NULL). Provide consistent order levels(.factor(data$strata)). formula Optional. Surv() formula specifying survival model. Default survival::Surv(time,event) ~ .factor(strata) xlab x-axis label plots. Default \"Time\". font.family name font plots. Default \"Roboto Condensed\". plot.theme ggplot2 theme plots. Default theme_easysurv(). add_interactive_plots Optional. Whether include plotly outputs hazard fit plots. Default FALSE.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_joint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit standard parametric survival models with a treatment covariate — quick_fit_joint","text":"object class quick_fit_joint containing following elements: converged list distributions converged fits survHE::fit.models output hazard_plots Smoothed hazard plots strata hazard_plotly Interactive hazard plots (add_interactive_plots = TRUE) fit_plots Plot extrapolations specified times parameter fit_plotly Interactive fit plots (add_interactive_plots = TRUE) goodness_of_fit AIC BIC output, alongside ranks, distribution surv_params flexsurv parameters model vcov matrix fit_averages median, mean restricted mean survival times distribution predicted_fits Predicted survival proportions times parameter, provided","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_joint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit standard parametric survival models with a treatment covariate — quick_fit_joint","text":"","code":"if (FALSE) { # Load required packages library(survival)  input_data <- survival::lung  surv_data <- tibble(   time = input_data$time,   event = input_data$status - 1,   strata = as.factor(input_data$sex) )  fit_check_joint <- quick_fit_joint(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\",   dists = c(\"weibull\", \"exp\") ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information and plots for parametric survival models — quick_fit_select","title":"Get information and plots for parametric survival models — quick_fit_select","text":"function checks whether survival models converge, fitting , returns fit information plots.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information and plots for parametric survival models — quick_fit_select","text":"","code":"quick_fit_select(   fit_type,   data,   time,   event,   strata,   dists,   strata_labels = NULL,   times = NULL,   formula = NULL,   xlab = \"Time\",   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   add_interactive_plots = FALSE )"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information and plots for parametric survival models — quick_fit_select","text":"fit_type Takes one following values: \"standard\", \"joint\", \"cure\", \"splines\" data tibble data frame containing survival data columns time, event strata. time name time variable data event name event variable data strata name strata variable data dists (vector ) string(s) containing name(s) model(s) fitted. Available options : \"exponential\", \"gamma\", \"genf\", \"gengamma\", \"gompertz\", \"weibull\", \"weibullPH\", \"loglogistic\", \"lognormal\". strata_labels Optional. character vector containing names stratas (default NULL). Provide consistent order levels(.factor(data$strata)). times Optional. set times calculate predicted survival. default seq(= 0, = ceiling(max(data$time)*2.5), length.= 200) formula Optional. Surv() formula. Default survival::Surv(time,event) ~ 1 xlab x-axis label plots. Default \"Time\". font.family name font plots. Default \"Roboto Condensed\". plot.theme ggplot2 theme plots. Default theme_easysurv(). add_interactive_plots Optional. Whether include plotly outputs hazard fit plots. Default FALSE.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information and plots for parametric survival models — quick_fit_select","text":"object class quick_fit components: converged list distributions converged fits survHE::fit.models output hazard_plots Smoothed hazard plots strata hazard_plotly Interactive hazard plots (add_interactive_plots = TRUE) fit_plots Plot extrapolations specified times parameter fit_plotly Interactive fit plots (add_interactive_plots = TRUE) goodness_of_fit AIC BIC output, alongside ranks, distribution surv_params flexsurv parameters model vcov matrix fit_averages median, mean restricted mean survival times distribution predicted_fits Predicted survival proportions times parameter, provided","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information and plots for parametric survival models — quick_fit_select","text":"","code":"if (FALSE) { # Load required packages library(survival)  input_data <- survival::lung  surv_data <- tibble(   time = input_data$time,   event = input_data$status - 1,   strata = as.factor(input_data$sex) )  fit_check <- quick_fit_select(   fit_type = \"standard\",   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\",   dists = c(\"weibull\", \"exp\") ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_splines.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information and plots for flexsurvspline models — quick_fit_splines","title":"Get information and plots for flexsurvspline models — quick_fit_splines","text":"function checks whether flexsurvspline models converge, fitting models via fit.models form survival::Surv(time,event) ~ 1 strata, models without warnings/errors, returns fit information plots.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_splines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information and plots for flexsurvspline models — quick_fit_splines","text":"","code":"quick_fit_splines(   data,   time,   event,   strata,   dists,   times = NULL,   strata_labels = NULL,   formula = NULL,   xlab = \"Time\",   font.family = \"Roboto Condensed\",   plot.theme = theme_easysurv(),   add_interactive_plots = FALSE )"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_splines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information and plots for flexsurvspline models — quick_fit_splines","text":"data tibble data frame containing survival data columns time, event strata. time name time variable data event name event variable data strata name strata variable data dists data frame columns knots scale specifying number knots used type spline model executed respectively. possible models : Proportional hazards model (scale = \"hazard\"), probit model (scale = \"normal\"), proportional odds model (scale = \"odds\"). times Optional. set times calculate predicted survival. default seq(= 0, = ceiling(max(data$time)*2.5), length.= 200) strata_labels Optional. character vector containing names stratas (default NULL). Provide consistent order levels(.factor(data$strata)). formula Optional. Surv() formula. Default survival::Surv(time,event) ~ 1 xlab x-axis label plots. Default \"Time\". font.family name font plots. Default \"Roboto Condensed\". plot.theme ggplot2 theme plots. Default theme_easysurv(). add_interactive_plots Optional. Whether include plotly outputs hazard fit plots. Default FALSE.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_splines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information and plots for flexsurvspline models — quick_fit_splines","text":"object class quick_fit_spline containing following elements: converged list distributions converged fits survHE::fit.models output hazard_plots Smoothed hazard plots strata hazard_plotly Interactive hazard plots (add_interactive_plots = TRUE) fit_plots Plot extrapolations specified times parameter fit_plotly Interactive fit plots (add_interactive_plots = TRUE) goodness_of_fit AIC BIC output, alongside ranks, distribution surv_params flexsurv parameters model vcov matrix fit_averages median, mean restricted mean survival times distribution predicted_fits Predicted survival proportions times parameter, provided","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_fit_splines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information and plots for flexsurvspline models — quick_fit_splines","text":"","code":"if (FALSE) { # Load required packages library(survival)  input_data <- survival::lung  surv_data <- tibble(   time = input_data$time,   event = input_data$status - 1,   strata = as.factor(input_data$sex) )  # Define distributions spline_dists <- tibble(   \"knots\" = c(1, 2, 3),   \"scale\" = c(\"odds\", \"hazard\", \"normal\") )  fit_check_splines <- quick_fit_splines(   data = surv_data,   time = \"time\",   event = \"event\",   strata = \"strata\",   dists = spline_dists ) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch an Example Script to Start Your Survival Analysis using the ","title":"Launch an Example Script to Start Your Survival Analysis using the ","text":"function launches example script starting survival analysis using easysurv package. script uses lung data set exported survival package. code inspired usethis::use_template modified work outside context .RProj package.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch an Example Script to Start Your Survival Analysis using the ","text":"","code":"quick_start(output_file_name = NULL)"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch an Example Script to Start Your Survival Analysis using the ","text":"output_file_name Optional. file name use script. Defaults \"easysurv_start.R\" within helper function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch an Example Script to Start Your Survival Analysis using the ","text":"","code":"if (FALSE) { quick_start() }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start2.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch an Example Script to Start Your Survival Analysis using the ","title":"Launch an Example Script to Start Your Survival Analysis using the ","text":"function launches example script starting survival analysis using easysurv package. script uses bc data set exported flexsurv package. code inspired usethis::use_template modified work outside context .RProj package.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch an Example Script to Start Your Survival Analysis using the ","text":"","code":"quick_start2(output_file_name = NULL)"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch an Example Script to Start Your Survival Analysis using the ","text":"output_file_name Optional. file name use script. Defaults \"easysurv_start.R\" within helper function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch an Example Script to Start Your Survival Analysis using the ","text":"","code":"if (FALSE) { quick_start2() }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start3.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch an Example Script to Start Your Survival Analysis using simulated clinical trial data — quick_start3","title":"Launch an Example Script to Start Your Survival Analysis using simulated clinical trial data — quick_start3","text":"function launches example script starting survival analysis using easysurv package. script uses simulated phase III breast cancer trial data provided authors ggsurvfit package. code inspired usethis::use_template modified work outside context .RProj package.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch an Example Script to Start Your Survival Analysis using simulated clinical trial data — quick_start3","text":"","code":"quick_start3(output_file_name = NULL)"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch an Example Script to Start Your Survival Analysis using simulated clinical trial data — quick_start3","text":"output_file_name Optional. file name use script. Defaults \"easysurv_start.R\"  within helper function.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch an Example Script to Start Your Survival Analysis using simulated clinical trial data — quick_start3","text":"","code":"if (FALSE) { quick_start3() }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select an Example Script to Start Your Survival Analysis using ","title":"Select an Example Script to Start Your Survival Analysis using ","text":"back-end function called \"quick_start()\" functions, launches example script starting survival analysis using easysurv package. code inspired usethis::use_template modified work outside context .RProj package.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select an Example Script to Start Your Survival Analysis using ","text":"","code":"quick_start_select(output_file_name = NULL, template_file_name = NULL)"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select an Example Script to Start Your Survival Analysis using ","text":"output_file_name Optional. file name use script. Defaults \"easysurv_start.R\". template_file_name Optional. name R script sourced template. Defaults \"quick_template_lung.R\".","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_start_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select an Example Script to Start Your Survival Analysis using ","text":"","code":"if (FALSE) { quick_start_select() }"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_to_XL.html","id":null,"dir":"Reference","previous_headings":"","what":"Export quick_... output to Excel via openxlsx — quick_to_XL","title":"Export quick_... output to Excel via openxlsx — quick_to_XL","text":"Export quick_... output Excel via openxlsx","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_to_XL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export quick_... output to Excel via openxlsx — quick_to_XL","text":"","code":"quick_to_XL(wb, quick_object)"},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_to_XL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export quick_... output to Excel via openxlsx — quick_to_XL","text":"wb Workbook object containing worksheet quick_object output quick_... command","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/quick_to_XL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export quick_... output to Excel via openxlsx — quick_to_XL","text":"","code":"if (FALSE) { # To add }"},{"path":"https://maple-health-group.github.io/easysurv/reference/runMLE.cure.html","id":null,"dir":"Reference","previous_headings":"","what":"Run maximum likelihood estimation (MLE) on cure models for survival analysis — runMLE.cure","title":"Run maximum likelihood estimation (MLE) on cure models for survival analysis — runMLE.cure","text":"function performs MLE cure models using either flexsurvcure flexsurvspline functions depending specified distribution.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/runMLE.cure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run maximum likelihood estimation (MLE) on cure models for survival analysis — runMLE.cure","text":"","code":"runMLE.cure(x, exArgs)"},{"path":"https://maple-health-group.github.io/easysurv/reference/runMLE.cure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run maximum likelihood estimation (MLE) on cure models for survival analysis — runMLE.cure","text":"x specified distribution run MLE . \"splines\", flexible parametric survival model fitted using flexsurvspline function. distribution, cure model fitted using flexsurvcure function. exArgs Additional arguments pass flexsurvcure flexsurvspline function, formula data.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/runMLE.cure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run maximum likelihood estimation (MLE) on cure models for survival analysis — runMLE.cure","text":"list containing fitted model, AIC, BIC, DIC (NULL case), time taken run estimation, model name.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/runMLE.cure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run maximum likelihood estimation (MLE) on cure models for survival analysis — runMLE.cure","text":"","code":"if (FALSE) { library(survival)  # Example usage with flexsurvcure formula <- Surv(time, status) ~ as.factor(sex) data <- lung runMLE.cure(\"weibull\", exArgs = list(formula = formula, data = data))  # Example usage with flexsurvspline formula <- Surv(time, status) ~ as.factor(sex) data <- lung k <- 3 runMLE.cure(\"splines\", exArgs = list(formula = formula, data = data, k = k)) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/step_KM.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate KM data in a 'stepped' manner for external plotting — step_KM","title":"Tabulate KM data in a 'stepped' manner for external plotting — step_KM","text":"function takes survival object generated call survfit creates table 'stepped' format suitable external plotting, Excel.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/step_KM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate KM data in a 'stepped' manner for external plotting — step_KM","text":"","code":"step_KM(KM, add_time_0 = TRUE)"},{"path":"https://maple-health-group.github.io/easysurv/reference/step_KM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate KM data in a 'stepped' manner for external plotting — step_KM","text":"KM survival object generated call survfit. KM object class \"survfit\" represent single-arm survival analysis (e.g. Surv(time, status) ~ 1). add_time_0 Optional. Uses survival::survfit0 add point starting time (time 0) survfit object's elements. useful plotting. Default TRUE.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/step_KM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate KM data in a 'stepped' manner for external plotting — step_KM","text":"data frame containing 'stepped' tabulated survival data suitable external plotting analysis. table includes information time points, number risk, survival probability, number events time point.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/step_KM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate KM data in a 'stepped' manner for external plotting — step_KM","text":"","code":"if (FALSE) { library(survival)  # Example usage with lung data fit <- survfit(Surv(time, status) ~ 1, data = lung)  stepped_KM <- step_KM(fit, add_time_0 = TRUE)  # Send to Excel write.csv(stepped_KM, \"survival_data.csv\") }"},{"path":"https://maple-health-group.github.io/easysurv/reference/summarise_KM.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the data in a survfit object — summarise_KM","title":"Summarize the data in a survfit object — summarise_KM","text":"function takes survival object generated call survfit produces concise summary table.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/summarise_KM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the data in a survfit object — summarise_KM","text":"","code":"summarise_KM(fit, strata_labels = NULL)  summarize_KM(fit, strata_labels = NULL)"},{"path":"https://maple-health-group.github.io/easysurv/reference/summarise_KM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the data in a survfit object — summarise_KM","text":"fit survival object generated call survfit. strata_labels Optional parameter rename group column (multiple strata)","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/summarise_KM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the data in a survfit object — summarise_KM","text":"data frame summarizing data survival object. table includes information strata, number observations, number events, restricted mean survival times, median survival times, corresponding confidence intervals.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/summarise_KM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the data in a survfit object — summarise_KM","text":"","code":"if (FALSE) { library(survival)  # Example usage with lung data fit <- survfit(Surv(time, status) ~ as.factor(sex), data = lung) summarise_KM(fit) }"},{"path":"https://maple-health-group.github.io/easysurv/reference/theme_easysurv.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a custom theme for the package to a ggplot2 plot — theme_easysurv","title":"Adds a custom theme for the package to a ggplot2 plot — theme_easysurv","text":"custom theme based theme_ipsum_rc hrbrthemes package. uses Roboto Condensed font, downloaded via sysfonts::font_add_google(\"Roboto Condensed\") package startup.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/theme_easysurv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a custom theme for the package to a ggplot2 plot — theme_easysurv","text":"","code":"theme_easysurv(   base_family = \"Roboto Condensed\",   base_size = 11.5,   plot_title_family = base_family,   plot_title_size = 16,   plot_title_face = \"bold\",   plot_title_margin = 8,   subtitle_family = base_family,   subtitle_size = 13,   subtitle_face = \"plain\",   subtitle_margin = 5,   strip_text_family = base_family,   strip_text_size = 12,   strip_text_face = \"plain\",   caption_family = base_family,   caption_size = 9,   caption_face = \"plain\",   caption_margin = 10,   axis_text_size = base_size,   axis_title_family = base_family,   axis_title_size = 11,   axis_title_face = \"plain\",   axis_title_just = \"rt\",   plot_margin = ggplot2::margin(5, 5, 5, 5),   panel_spacing = grid::unit(2, \"lines\"),   grid_col = \"#cccccc\",   grid = TRUE,   axis_col = \"grey30\",   axis = TRUE,   ticks = FALSE )"},{"path":"https://maple-health-group.github.io/easysurv/reference/theme_easysurv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a custom theme for the package to a ggplot2 plot — theme_easysurv","text":"base_family Base font family text elements plot (default \"Roboto Condensed\"). base_size Base font size text elements plot (default 11.5). plot_title_family Font family plot titles. plot_title_size Font size plot titles. plot_title_face Font face plot titles (e.g., \"plain,\" \"bold,\" \"italic,\" combinations like \"bold|italic\") (default \"bold\"). plot_title_margin Margin plot title plot area (points) (default 8). subtitle_family Font family subtitles. subtitle_size Font size subtitles. subtitle_face Font face plot titles (e.g., \"plain,\" \"bold,\" \"italic,\" combinations like \"bold|italic\") (default \"plain\"). subtitle_margin Margin subtitle plot area (points) (default 5). strip_text_family Font family strip text (e.g., facet labels). strip_text_size Font size strip text (default 12). strip_text_face Font face strip text (e.g., \"plain,\" \"bold,\" \"italic,\" combinations like \"bold|italic\") (default \"plain\"). caption_family Font family plot captions. caption_size Font size plot captions (default 9). caption_face Font face plot captions (e.g., \"plain,\" \"bold,\" \"italic,\" combinations like \"bold|italic\") (default \"plain\"). caption_margin Margin captions plot area (points) (default 10). axis_text_size Font size axis labels (default base_size; 11.5). axis_title_family Font family axis titles. axis_title_size Font size axis titles (default 11). axis_title_face Font face axis titles (e.g., \"plain,\" \"bold,\" \"italic,\" combinations like \"bold|italic\") (default \"plain\"). axis_title_just Justification axis titles. can set : \"bl\" (bottom left), \"tl\" (top left), \"bc\" (bottom center), \"tc\" (top center), \"br\" (bottom right), \"tr\" (top right) (default \"rt\"). plot_margin Margin around entire plot area. Use margin function (default ggplot2::margin(5, 5, 5, 5)). panel_spacing Spacing panels facetted plot. Use unit function (default grid::unit(2, \"lines\")). grid_col Color grid lines (default \"#cccccc\"). grid Logical indicating whether display grid lines. axis_col Color axis lines (default \"grey30\"). axis Logical indicating whether display axis lines. ticks Logical indicating whether display ticks axis.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/theme_easysurv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a custom theme for the package to a ggplot2 plot — theme_easysurv","text":"object class theme represents custom theme.","code":""},{"path":"https://maple-health-group.github.io/easysurv/reference/theme_easysurv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a custom theme for the package to a ggplot2 plot — theme_easysurv","text":"","code":"if (FALSE) { require(\"survival\") fit <- survfit(Surv(time, status) ~ as.factor(sex), data = lung) ggsurvplot(fit, data = lung, ggtheme = theme_easysurv()) }"}]
